version: 2
jobs:
  build:
    working_directory: ~/code
    docker:
      - image: circleci/android:api-29-node
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      #      - run:
      #         name: Chmod permissions #if permission for Gradlew Dependencies fail, use this.
      #         command: sudo chmod +x ./gradlew
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Create Emulator
          commands: cd $ANDROID_HOME/tools/bin
          ./sdkmanager "system-images;android-24;default;armeabi-v7a"
          ./sdkmanager --licenses
          avdmanager create avd -n test -k "system-images;android-24;default;armeabi-v7a"
      - run:
          name: Boot Emulator
          command: emulator -avd circleci-android24-googleapis -no-audio -no-window
          background: true
          parallel: true
      - run:
          name: Wait for boot
          command: circle-android wait-for-boot
      - run:
          name: Additional Sleep
          command: sleep 30
      - run:
          name: Unlock the emulator screen
          command: adb shell input keyevent 82
      - run:
          name: Run UI automation tests
          command: ./gradlew lint test connectedDebugAndroidTest -PUSE_HEAD_TRACKING="false"
      - run:
          name: Build Debug Apk
          command: ./gradlew assembleDebug
      - run:
          name: Install AppCenter CLI
          command: sudo npm install -g appcenter-cli
      - run:
          name: Publish to AppCenter
          command: |
            appcenter login --token ${APP_CENTER_TOKEN}
            export apk="$(find ./app/build/outputs/apk/debug -regex '.*.apk')"
            appcenter distribute release -f ${apk} -g ${APP_CENTER_DISTRIBUTION_LIST} --app ${APP_CENTER_APP_NAME} -r "Android" --silent
      - store_artifacts: # for display in Artifacts: https://circleci.com/docs/2.0/artifacts/ 
          path: app/build/reports
          destination: reports
      - store_test_results: # for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: app/build/test-results